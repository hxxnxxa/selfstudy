"""

점프 투 파이썬
URL : https://wikidocs.net/26
04-3 파일 읽고 쓰기

"""



# 파일 생성하기-1 ----------------------------------------------------------------------------------------------------------------------------
# f = open("test.txt", 'w')
# f.close()
"""
* 파일을 생성하기 위해 파이썬 내장 함수인 open 이용 
* open 함수는 위와 같이 "파일 이름"과 "파일 열기 모드"를 입력 값으로 받고 결과값으로 파일 객체를 돌려준다.

* 모드 설명 
1) r : 읽기 모드, 파일을 읽기만 할 때 사용
2) w : 쓰기 모드, 파일에 내용을 쓸 때 사용, 이전 내용은 모두 삭제된다.
3) a : 추가 모드, 파일의 마지막에 새로운 내용을 추가시킬 때 사용
"""



# 파일 생성하기-2 -------------------------------------------------------------------------------------------------------------------------------
# f = open("d:/workspace/python/fileEx/test2.txt", 'w')
# f.close()
"""
* 위의 statement는 r"D:/workspace/python/fileEx/test2.txt"로도 쓸 수 있다. 
  /n으로 잘못 인식되지 않도록 r을 쓴다. 
  이처럼 역슬래시를 사용할 경우 문자열 앞에 r문자(Raw String)를 덧붙여 사용할 수 있다.

* close() 함수
1) 열려있는 파일 객체를 닫아주는 역할
2) 생략해도 된다. 프로그램을 종료할 때 파이썬 프로그램이 열려있는 파일의 객체를 자동으로 닫아주기 때문이다.
3) close() 를 사용해서 열려있는 파일을 직접 닫아주는 것이 좋다. 쓰기 모드로 열었던 파일을 닫지않고 다시 사용하려고 하면 오류가 발생하기 때문이다.
"""



# 파일을  쓰기 모드로 열어 출력 값 적기 -1 --------------------------------------------------------------------------------------------------------
# 출력 결과를 파일에 쓰기
# f = open("test.txt", 'w')
# for i in range(1, 11):
#     data = "%d번째 줄 입니다.\n" % i
#     f.write(data)
# f.close()



# 파일을  쓰기 모드로 열어 출력 값 적기 -2 --------------------------------------------------------------------------------------------------------
#  출력 결과를 모니터 화면으로 띄우기
# f = open("test.txt",'w')
# for i in range(1, 11):
#     data = "%d번째 줄입니다.\n" % i
#     print(data)
# f.close()



# 프로그램의 외부에 저장된 파일의 첫 번째 줄만 읽어서 출력하는 방법 ---------------------------------------------------------------------------------
# f = open("test.txt", 'r')
# line = f.readline()
# print(line)
# f.close()
"""
test.txt를 읽기 모드로 연 다음 readline()을 사용해서 파일의 첫 번째 줄을 읽어 출력한다.
test.txt의 가장 첫 번째 줄이 화면에 출력된다.
"""



# 프로그램 외부에 저장된 파일의 모든 줄을 읽어서 출력하는 방법 --------------------------------------------------------------------------------------
# f = open("test.txt", 'r')
# while True:
#     line = f.readline()
#     if not line: break
#     print(line)
# f.close()
"""
while True: 무한 루프 안에서 
f.readline()을 사용해 파일을 계속해서 한 줄씩 읽어 들인다.
더 이상 읽을 줄이 없으면 break를 수행한다.
readline()은 더 이상 읽을 줄이 없을 경우 빈 문자열('')을 리턴한다.
한 줄 씩 읽어 출력할 때 줄 끝에 \n 문자가 있으므로 빈 줄도 같이 출력된다.
"""



# 사용자의 입력을 받아서 그 내용을 출력 해 보기 ---------------------------------------------------------------------------------------------------
# f = open("test.txt", 'r')
# while True:
#     data = input()
#     if not data: break
#     print(data)



# readlines 함수 사용하기 -----------------------------------------------------------------------------------------------------------------------
# f = open("test.txt", 'r')
# lines = f.readlines()

# for line in lines:
#     line = line.strip() # 줄끝의 줄바꿈 문자를 제거한다.
#     print(line)
# f.close()
"""
readlines 함수는 파일의 모든 줄을 읽어서 각각의 줄을 요소로 갖는 리스트로 돌려준다.
따라서 위의 예에서 lines는 리스트가 된다.
f.readlines()는 f.readline()과 다름을 유의한다.
"""



# read 함수 사용하기 -----------------------------------------------------------------------------------------------------------------------
# f = open("test.txt", 'r')
# data = f.read()
# print(data)
# f.close()
"""
f.read()는 파일의 내용 전체를 문자열로 돌려준다.
"""



# 파일에 새로운 내용 추가하기 -----------------------------------------------------------------------------------------------------------------------
# f = open("test.txt",'a')
# for i in range(11, 20):
#     data = "%d번째 줄입니다.\n" % i
#     f.write(data)
# f.close()
"""
test.txt 파일을 추가모드'a'로 열고 write를 사용해서 결과값을 기존 파일에 추가해 적는다.
여기서 추가모드로 파일을 열었기 때문에 test.txt가 원래 가지고있던 애용 바로 다음부터 결과값을 적기 시작한다.
"""


# with문과 함께 사용하기 -----------------------------------------------------------------------------------------------------------------------
f = open("foo.txt", 'w')
f.write("Life is too short, you need python")

data = f.read()
print(data)

f.close()